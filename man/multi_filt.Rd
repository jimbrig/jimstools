% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_filt.R
\name{multi_filt}
\alias{multi_filt}
\title{Multi Filt}
\usage{
multi_filt(data, vars, filts)
}
\arguments{
\item{data}{data}

\item{vars}{variables}

\item{filts}{filters}
}
\value{
filtered df
}
\description{
Filter across multiple variables.
}
\details{
NOTE: this function currently only supports character and factor level
filtering by using the \verb{dplyr::filter(<var> \%in\% c(<filts>))} syntax. For numeric
and date level filtering will need to incorporate expressions like \verb{<= 5} as
\code{filt} arguments.
}
\examples{
library(dplyr)
data <- datasets::iris
str(data)

iris_filtered <- multi_filt(data, vars = list("Species"), filts = list(c("setosa", "versicolor")))

str(iris_filtered) # filtered for only Species \%in\% c("setosa" and "versicolor")
}
\references{
\code{\link[dplyr:filter]{dplyr::filter()}}
\href{https://www.tidyverse.org/blog/2019/06/rlang-0-4-0/}{rlang tidyeval}
\href{https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/}{tidyeval glue syntax}
}
